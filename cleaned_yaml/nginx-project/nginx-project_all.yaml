items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: nginx-project
    namespace: default
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: nginx-project
    serviceName: {}
    template:
      metadata:
        labels:
          app: nginx-project
      spec:
        containers:
        - env: []
          image: nginx:{IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe: {}
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          readinessProbe: {}
          resources: {}
          volumeMounts: []
        volumes: []
    volumeClaimTemplates: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: nginx-project
    namespace: default
  spec:
    ports:
    - name: ''
      port: 80
      targetPort: 80
    selector:
      app: nginx-project
    type: LoadBalancer
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: nginx-project
    namespace: default
  spec:
    rules:
    - host: nginx-project.example.com
      http:
        paths:
        - backend:
            service:
              name: nginx-project
              port:
                number: 80
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - nginx-project.example.com
      secretName: nginx-project-tls
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    name: nginx-project
    namespace: default
  spec:
    maxReplicas: 3
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 50
          type: Utilization
      type: Resource
    minReplicas: 2
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: nginx-project
